# Generated from LabeledExpr.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,108,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,
        9,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,
        1,15,4,15,88,8,15,11,15,12,15,89,1,16,4,16,93,8,16,11,16,12,16,94,
        1,17,4,17,98,8,17,11,17,12,17,99,1,18,4,18,103,8,18,11,18,12,18,
        104,1,18,1,18,0,0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
        10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,1,0,17,
        2,0,77,77,109,109,2,0,79,79,111,111,2,0,68,68,100,100,2,0,83,83,
        115,115,2,0,81,81,113,113,2,0,82,82,114,114,2,0,84,84,116,116,2,
        0,76,76,108,108,2,0,78,78,110,110,2,0,71,71,103,103,2,0,73,73,105,
        105,2,0,67,67,99,99,2,0,65,65,97,97,2,0,65,90,97,122,1,0,48,57,2,
        0,10,10,13,13,2,0,9,9,32,32,111,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,
        0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
        0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
        0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,
        0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,47,1,0,0,0,7,53,1,0,0,
        0,9,55,1,0,0,0,11,58,1,0,0,0,13,62,1,0,0,0,15,64,1,0,0,0,17,68,1,
        0,0,0,19,72,1,0,0,0,21,76,1,0,0,0,23,78,1,0,0,0,25,80,1,0,0,0,27,
        82,1,0,0,0,29,84,1,0,0,0,31,87,1,0,0,0,33,92,1,0,0,0,35,97,1,0,0,
        0,37,102,1,0,0,0,39,40,5,61,0,0,40,2,1,0,0,0,41,42,7,0,0,0,42,43,
        7,1,0,0,43,44,7,2,0,0,44,45,7,1,0,0,45,46,5,61,0,0,46,4,1,0,0,0,
        47,48,7,3,0,0,48,49,7,4,0,0,49,50,7,5,0,0,50,51,7,6,0,0,51,52,5,
        40,0,0,52,6,1,0,0,0,53,54,5,41,0,0,54,8,1,0,0,0,55,56,7,7,0,0,56,
        57,7,8,0,0,57,10,1,0,0,0,58,59,7,7,0,0,59,60,7,1,0,0,60,61,7,9,0,
        0,61,12,1,0,0,0,62,63,5,40,0,0,63,14,1,0,0,0,64,65,7,3,0,0,65,66,
        7,10,0,0,66,67,7,8,0,0,67,16,1,0,0,0,68,69,7,11,0,0,69,70,7,1,0,
        0,70,71,7,3,0,0,71,18,1,0,0,0,72,73,7,6,0,0,73,74,7,12,0,0,74,75,
        7,8,0,0,75,20,1,0,0,0,76,77,5,33,0,0,77,22,1,0,0,0,78,79,5,42,0,
        0,79,24,1,0,0,0,80,81,5,47,0,0,81,26,1,0,0,0,82,83,5,43,0,0,83,28,
        1,0,0,0,84,85,5,45,0,0,85,30,1,0,0,0,86,88,7,13,0,0,87,86,1,0,0,
        0,88,89,1,0,0,0,89,87,1,0,0,0,89,90,1,0,0,0,90,32,1,0,0,0,91,93,
        7,14,0,0,92,91,1,0,0,0,93,94,1,0,0,0,94,92,1,0,0,0,94,95,1,0,0,0,
        95,34,1,0,0,0,96,98,7,15,0,0,97,96,1,0,0,0,98,99,1,0,0,0,99,97,1,
        0,0,0,99,100,1,0,0,0,100,36,1,0,0,0,101,103,7,16,0,0,102,101,1,0,
        0,0,103,104,1,0,0,0,104,102,1,0,0,0,104,105,1,0,0,0,105,106,1,0,
        0,0,106,107,6,18,0,0,107,38,1,0,0,0,5,0,89,94,99,104,1,6,0,0
    ]

class LabeledExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    MUL = 12
    DIV = 13
    ADD = 14
    SUB = 15
    ID = 16
    INT = 17
    NEWLINE = 18
    WS = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'modo='", "'Sqrt('", "')'", "'ln'", "'log'", "'('", 
            "'sin'", "'cos'", "'tan'", "'!'", "'*'", "'/'", "'+'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "MUL", "DIV", "ADD", "SUB", "ID", "INT", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "MUL", "DIV", "ADD", 
                  "SUB", "ID", "INT", "NEWLINE", "WS" ]

    grammarFileName = "LabeledExpr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


